1.6*591
0.03*366
japonicSubGrp.df = read.csv(file = "/Users/chwu/Documents/research/japonicLanguages/JapanoicData/japonic_coordinates_subgroups.csv",
header = T)
head(japonicSubGrp.df)
table(japonicSubGrp.df$subgroup)
table(japonicSubGrp.df$sub)
japonicSubGrp.df$language[japonicSubGrp.df$sub=="AM"]
sapply(sort(unique(japonicSubGrp.df$sub)),
function(lan = NULL, grp = NULL, sub = NULL){
lan[sub == ""]
},
lan = japonicSubGrp.df$language,
sub = japonicSubGrp.df$sub)
sapply(sort(unique(japonicSubGrp.df$sub)),
function(lan = NULL, grp = NULL, sub = NULL){
lan[sub == grp]
},
lan = japonicSubGrp.df$language,
sub = japonicSubGrp.df$sub)
math6173cwk2.df = read.csv(file = "/Users/chwu/Downloads/MATH6173_cw2_section2.csv",
header = T, as.is = T)
View(math6173cwk2.df )
math6173Names = c("Name", "Student ID", "User ID", "Section 2",
"Q1 (a)", "Q1 (b)", "Q1 (c)",
"Q2 (a)", "Q2 (b)", "Q2 (c)",
"Q3 (a)", "Q3 (b)")
names(math6173.df) = math6173Names
math6173NamesCwk2 = c("Name", "Student ID", "User ID", "Section 2",
"Q1 (a)", "Q1 (b)", "Q1 (c)", "Q1 (d)"
"Q2", "Q3", "Q4")
math6173NamesCwk2 = c("Name", "Student ID", "User ID", "Section 2",
"Q1 (a)", "Q1 (b)", "Q1 (c)", "Q1 (d)",
"Q2", "Q3", "Q4")
math6173NamesCwk2 = c("Name", "Student ID", "User ID", "Section 2",
"Q1 (a)", "Q1 (b)", "Q1 (c)", "Q1 (d)",
"Q2", "Q3", "Q4", "Comments")
names(math6173cwk2.df) = math6173NamesCwk2
View(math6173cwk2.df)
head(math6173cwk2.df)
math6173TotalCwk2 = c()
for(i in 1:nrow(math6173cwk2.df)){
if(math6173cwk2.df[i,'Section 2'] == 0){
math6173TotalCwk2[i] = 0
}else{
math6173TotalCwk2[i] = sum(as.numeric(do.call(rbind,strsplit(as.character(math6173cwk2.df[i,c(5:11)]),
split ="/", fixed = T))[,1]))
}
}
i
math6173cwk2.df[i,'Section 2']
math6173cwk2.df[i,'Section 2'] == 0
math6173TotalCwk2 = c()
for(i in 1:nrow(math6173cwk2.df)){
if(is.na((math6173cwk2.df[i,'Section 2'])){
math6173TotalCwk2[i] = NA
}else if(math6173cwk2.df[i,'Section 2'] == 0){
math6173TotalCwk2[i] = 0
}else{
math6173TotalCwk2[i] = sum(as.numeric(do.call(rbind,strsplit(as.character(math6173cwk2.df[i,c(5:11)]),
split ="/", fixed = T))[,1]))
}
}
is.na((math6173cwk2.df[i,'Section 2'])
)
math6173TotalCwk2 = c()
for(i in 1:nrow(math6173cwk2.df)){
if(is.na(math6173cwk2.df[i,'Section 2'])){
math6173TotalCwk2[i] = NA
}else if(math6173cwk2.df[i,'Section 2'] == 0){
math6173TotalCwk2[i] = 0
}else{
math6173TotalCwk2[i] = sum(as.numeric(do.call(rbind,strsplit(as.character(math6173cwk2.df[i,c(5:11)]),
split ="/", fixed = T))[,1]))
}
}
math6173TotalCwk2
math6173TotalCwk2 = c()
for(i in 1:nrow(math6173cwk2.df)){
if(is.na(math6173cwk2.df[i,'Section 2'])){
math6173TotalCwk2[i] = NA
}else if(math6173cwk2.df[i,'Section 2'] == 0){
math6173TotalCwk2[i] = 0
}else{
math6173TotalCwk2[i] = sum(as.numeric(do.call(rbind,strsplit(as.character(math6173cwk2.df[i,c(5:11)]),
split ="/", fixed = T))[,1]))
}
}
math6173TotalCwk2
math6173cwk2.df = read.csv(file = "/Users/chwu/Downloads/MATH6173_cw2_section2.csv",
header = T, as.is = T)
math6173NamesCwk2 = c("Name", "Student ID", "User ID", "Section 2",
"Q1 (a)", "Q1 (b)", "Q1 (c)", "Q1 (d)",
"Q2", "Q3", "Q4", "Comments")
names(math6173cwk2.df) = math6173NamesCwk2
math6173TotalCwk2 = c()
for(i in 1:nrow(math6173cwk2.df)){
if(is.na(math6173cwk2.df[i,'Section 2'])){
math6173TotalCwk2[i] = NA
}else if(math6173cwk2.df[i,'Section 2'] == 0){
math6173TotalCwk2[i] = 0
}else{
math6173TotalCwk2[i] = sum(as.numeric(do.call(rbind,strsplit(as.character(math6173cwk2.df[i,c(5:11)]),
split ="/", fixed = T))[,1]))
}
}
math6173TotalCwk2
math6173TotalCwk2 - math6173cwk2.df[,'Section 2']
math6173TotalCwk2
which(math6173cwk2.df[,'Section 2'] - math6173Total!=0)
which(math6173cwk2.df[,'Section 2'] - math6173TotalCwk2  != 0)
math6173cwk2.df = read.csv(file = "/Users/chwu/Downloads/MATH6173_cw2_section2.csv",
header = T, as.is = T)
math6173NamesCwk2 = c("Name", "Student ID", "User ID", "Section 2",
"Q1 (a)", "Q1 (b)", "Q1 (c)", "Q1 (d)",
"Q2", "Q3", "Q4", "Comments")
names(math6173cwk2.df) = math6173NamesCwk2
math6173TotalCwk2 = c()
for(i in 1:nrow(math6173cwk2.df)){
if(is.na(math6173cwk2.df[i,'Section 2'])){
math6173TotalCwk2[i] = NA
}else if(math6173cwk2.df[i,'Section 2'] == 0){
math6173TotalCwk2[i] = 0
}else{
math6173TotalCwk2[i] = sum(as.numeric(do.call(rbind,strsplit(as.character(math6173cwk2.df[i,c(5:11)]),
split ="/", fixed = T))[,1]))
}
}
math6173TotalCwk2 - math6173cwk2.df[,'Section 2']
table(which(math6173cwk2.df[,'Section 2'] - math6173TotalCwk2  != 0))
table(math6173TotalCwk2 - math6173cwk2.df[,'Section 2'])
which(math6173cwk2.df[,'Section 2'] - math6173TotalCwk2  != 0)
math6173Total[which(math6173.df[,'Section 2'] - math6173Total!=0)]
math6173TotalCwk2[which(math6173cwk2.df[,'Section 2'] - math6173TotalCwk2 != 0 )]
math6173cwk2.df[which(math6173cwk2.df[,'Section 2'] - math6173TotalCwk2 != 0),'Section 2']
studentIndex = 1
student = cbind(math6173NamesCwk2, math6173cwk2.df[studentIndex, c(5:11)])
length(math6173NamesCwk2)
student = cbind(math6173NamesCwk2[c(5:11)], math6173cwk2.df[studentIndex, c(5:11)])
math6173NamesCwk2[c(5:11)]
math6173cwk2.df[studentIndex, c(5:11)]
apply(student, 1, paste, collapse = " ")
studentIndex = 2
student = cbind(math6173NamesCwk2[c(5:11)], math6173cwk2.df[studentIndex, c(5:11)])
apply(student, 1, paste, collapse = " ")
length(math6173cwk2.df[studentIndex, c(5:11)])
apply(student, 1, paste, collapse = " ")
comments = c()
for(studentIndex in 1:nrow(math6173.df)){
student = cbind(math6173NamesCwk2[c(5:11)], math6173cwk2.df[studentIndex, c(5:11)])
comments[studentIndex] = paste(apply(student, 1, paste, collapse = " "), collapse = "\n")
}
comments = c()
for(studentIndex in 1:nrow(math6173cwk2.df)){
student = cbind(math6173NamesCwk2[c(5:11)], math6173cwk2.df[studentIndex, c(5:11)])
comments[studentIndex] = paste(apply(student, 1, paste, collapse = " "), collapse = "\n")
}
math6173cwk2.df[studentIndex, c(5:11)]
rownames(math6173cwk2.df) = NULL
comments = c()
for(studentIndex in 1:nrow(math6173cwk2.df)){
student = cbind(math6173NamesCwk2[c(5:11)], math6173cwk2.df[studentIndex, c(5:11)])
comments[studentIndex] = paste(apply(student, 1, paste, collapse = " "), collapse = "\n")
}
warnings()
math6173cwk2.df[studentIndex, c(5:11)]
math6173NamesCwk2[c(5:11)]
comments = c()
for(studentIndex in 1:nrow(math6173cwk2.df)){
student = cbind(math6173NamesCwk2[c(5:11)], as.character(math6173cwk2.df[studentIndex, c(5:11)]))
comments[studentIndex] = paste(apply(student, 1, paste, collapse = " "), collapse = "\n")
}
length(comments)
math6173cwk2v2.df = data.frame(math6173cwk2.df[,c(1:4)],
comments = comments)
write.csv(math6173cwk2v2.df,
file = "/Users/chwu/Documents/teaching/southampton/MATH6166_6173/21_22/Coursework/cw2/marking/MATH6173_21_22_cw2S2_marks.csv",
quote = T, row.names = F)
rmID = c(33373493, 33368716)
match(rmID, math6173cwk2v2.df$Student.ID)
math6173cwk2v2.df = math6173cwk2v2.df[match(rmID, math6173cwk2v2.df$Student.ID), ]
nrow(math6173cwk2v2.df)
math6173cwk2v2.df = data.frame(math6173cwk2.df[,c(1:4)],
comments = comments)
math6173cwk2v2.df = math6173cwk2v2.df[-match(rmID, math6173cwk2v2.df$Student.ID), ]
dim(math6173cwk2v2.df )
write.csv(math6173cwk2v2.df,
file = "/Users/chwu/Documents/teaching/southampton/MATH6166_6173/21_22/Coursework/cw2/marking/MATH6173_21_22_cw2S2_marks.csv",
quote = T, row.names = F)
math6173TotalCwk2 - math6173cwk2.df[,'Section 2']
knitr::opts_chunk$set(echo = TRUE)
# Function for calculating the Gaussian mixture.
gaussMixLik = function(x = NULL,
mu = NULL,
sigma = NULL,
pi = NULL){
lik = 0
## Going through each of the K normal distributions of the mixture model.
for(k in 1:length(mu)){
lik = lik + pi[k]*dnorm(x, mean = mu[k], sd = sigma[k])
}
return(lik)
}
## Function to calculate the x'.
calcXPrime = function(x = NULL,
mu = NULL,
sigma = NULL,
pi = NULL,
eta = NULL,
tiCount = NULL){
## Obtain the length of the subintervals.
subIntLength = 2*eta/tiCount
xp = rep(NA, length = length(x))
normConst = rep(NA, length = length(x))
## Going through each element in the vector x.
for(i in 1:length(x)){
xp[i] = 0
normConst[i] = 0
## Calculate the boundaries of the subintervals
xSeq = seq(from = x[i] - eta, to = x[i] + eta, by = subIntLength)
liks = c()
for(j in 1:length(xSeq)){
## Calculate the likelihood under the Gaussian mixture
## for each boundary points of all the subintervals considered.
liks[j] = gaussMixLik(x = xSeq[j],
mu = mu,
sigma = sigma,
pi = pi)
}
## Calculate the integrand of the numerator of x'.
partMeans = xSeq*liks
## Calculate the integrals in the numerator and
## the denominator by the trapezoidal rule.
for(j in 1:tiCount){
xp[i] = xp[i] + (partMeans[j+1] + partMeans[j])
normConst[i] = normConst[i] + (liks[j + 1] + liks[j])
}
xp[i] = xp[i]/2*subIntLength
normConst[i] = normConst[i]/2*subIntLength
## Calculate the fraction of integrals.
xp[i] = xp[i]/normConst[i]
}
return(xp)
}
## Function that uses the previous two functions
## to calculate the bootstrap estimates of beta0 and beta1.
bootUncertReg = function(X = NULL,
y = NULL,
mu = NULL,
sigma = NULL,
pi = NULL,
eta = NULL,
bootCount = NULL,
tiCount = NULL){
## Calculate x'.
xp = calcXPrime(x = X,
mu = mu,
sigma = sigma,
pi = pi,
eta = eta,
tiCount = tiCount)
## Create the matrix that will contain the bootstrap estimates
bootCoefs = matrix(nrow = bootCount, ncol = 2)
## Going through each bootstrap replicate.
for(repIndex in 1:bootCount){
## Create bootstrap samples.
repSample = sample(1:length(X), size = length(X), replace = T)
xpB = xp[repSample]
yB = y[repSample]
## Calculate the mean of bootstrap x's.
meanXPB = mean(xpB)
## Calculate the mean of bootstrap y's
meanYB = mean(yB)
## Calculate the bootstrap estimate of beta1
beta1Boot = sum((xpB - meanXPB)*(yB - meanYB))/sum((xpB - meanXPB)^2)
## Calculate the bootstrap estimate of beta0
beta0Boot = meanYB - beta1Boot*meanXPB
bootCoefs[repIndex,] = c(beta0Boot, beta1Boot)
}
# Calculate the standard error
bootSE = apply(bootCoefs, 2, function(bootCoef){
sqrt(sum((bootCoef - mean(bootCoef))^2)/(bootCount - 1))
})
return(bootSE)
}
load("/Users/chwu/Documents/teaching/southampton/MATH6166_6173/21_22/Coursework/cw2/cw2Testing.RData")
set.seed(555)
q4ans1 = bootUncertReg(X = q4x1,
y = q4y1,
mu = q4mu1,
sigma = q4sigma1,
pi = q4pi1,
eta = 0.05,
bootCount = 100,
tiCount = 10)
q4ans1 - q4expt1
set.seed(555)
q4ans2 = bootUncertReg(X = q4x2,
y = q4y2,
mu = q4mu2,
sigma = q4sigma2,
pi = q4pi2,
eta = 0.5,
bootCount = 50,
tiCount = 20)
q4ans2 - q4expt2
set.seed(555)
q4ans3 = bootUncertReg(X = q4x3,
y = q4y3,
mu = q4mu3,
sigma = q4sigma3,
pi = q4pi3,
eta = 0.25,
bootCount = 100,
tiCount = 25)
q4ans3 - q4expt3
xp
install.packages("truncnorm")
math6166ID = c(29404002, 29499658, 30147824, 30649021, 31572014, 31575927, 31738524, 31781152, 31800866,
31837344, 31875602, 32125976, 32183364, 32231989, 32344961, 32521405, 32539762, 32562667,
32563132, 32579055, 32614764, 32628463, 32662564, 32678428, 32685416, 32685505, 32697341,
32716273, 32729588, 32729855, 32732384, 32734417, 32739729, 32746326, 32761449, 32804989,
32818181, 32821972, 32838638, 32842279, 32861656, 32909977, 32914326, 32920571, 32929617,
32956916, 32968418, 33023549, 33028109, 33043361, 33043981, 33092508, 33105693, 33144281,
33171904, 33184356, 33206619, 33253773, 33269327, 33271992, 33279195, 33281696, 33282382,
33282846, 33286442, 33291322, 33310513, 33312583, 33322317, 33323453, 33323607, 33340331,
33347123, 33348936, 33353786, 33376093, 33386595)
math6166.df = read.csv(file = "/Users/chwu/Documents/teaching/southampton/MATH6166_6173/21_22/Coursework/MATH6173 21-22/CW1_MATH6166-2122.csv",
header = T)
head(math6166.df )
names(math6166.df )
math6166.df [1,]
math6166.df [2,]
math6166.df = math6166.df[-1,]
math6166.df$Total..out.of.100.
match(math6166ID, math6166.df$Student.ID)
math6166.df$Total..out.of.100.[match(math6166ID, math6166.df$Student.ID)]
math6166.df$Section.1..out.of.50.[match(math6166ID, math6166.df$Student.ID)]
math6166.df$Total..out.of.100.[match(math6166ID, math6166.df$Student.ID)]
math6173cw1.df = read.csv(file = "/Users/chwu/Documents/teaching/southampton/MATH6166_6173/21_22/Coursework/MATH6173 21-22/CW1_MATH6173-2122.csv",
header = T)
math6173cw2.df = read.csv(file = "/Users/chwu/Documents/teaching/southampton/MATH6166_6173/21_22/Coursework/MATH6173 21-22/CW2_MATH6173_2122.csv",
header = T)
math6173cw1.df[1,]
math6173cw1.df[2,]
dim(math6173cw1.df )
dim(math6173cw2.df )
math6173ID = c(25815679, 29322057, 29343631, 29404045, 29616387, 30077966, 30103363, 30227798, 30266114,
30642531, 30646782, 30653622, 31453163, 31528635, 31668097, 31691021, 31713122, 31749429,
31783473, 31815294, 31850081, 31861822, 31969542, 32024215, 32065701, 32068492, 32108745,
32190247, 32203861, 32218877, 32408285, 32418108, 32532326, 32555288, 32569025, 32573634,
32575122, 32584962, 32588305, 32599102, 32599811, 32606516, 32641923, 32651465, 32652399,
32660359, 32661126, 32670958, 32678762, 32681542, 32682468, 32692684, 32706219, 32707053,
32719248, 32721307, 32722478, 32740484, 32740964, 32761198, 32763069, 32763158, 32763875,
32771843, 32798911, 32808089, 32813627, 32813635, 32844417, 32915799, 32925409, 32931166,
32942435, 32972245, 33034532, 33084815, 33085064, 33098166, 33099413, 33102007, 33108277,
33141606, 33230986, 33235503, 33235597, 33239401, 33266026, 33266743, 33268878, 33270635,
33276048, 33281424, 33282277, 33286604, 33288372, 33290415, 33299706, 33302014, 33309396,
33317496, 33319634, 33327718, 33327955, 33330891, 33342962, 33344442, 33344558, 33346305,
33347999, 33355037, 33355673, 33365733, 33373388, 33373493)
math6173cw1.df$Total..out.of.100.[match(math6173ID, math6173cw1.df$Student.ID)]
which(is.na(math6173cw1.df$Total..out.of.100.[match(math6173ID, math6173cw1.df$Student.ID)]))
length(which(is.na(math6173cw1.df$Total..out.of.100.[match(math6173ID, math6173cw1.df$Student.ID)])))
length(which(is.na(as.numeric(math6173cw1.df$Total..out.of.100.[match(math6173ID, math6173cw1.df$Student.ID)]))))
as.numeric(math6173cw1.df$Total..out.of.100.[match(math6173ID, math6173cw1.df$Student.ID)])
math6173cw2.df$Total..out.of.100.[match(math6173ID, math6173cw2.df$Student.ID)]
math6173cw2.df$Total..out.of.100.[match(math6173ID, math6173cw2.df$Student.ID)]
length(which(is.na(as.numeric(math6173cw2.df$Total..out.of.100.[match(math6173ID, math6173cw2.df$Student.ID)]))))
length(which(is.na(as.numeric(math6173cw2.df$Total..out.of.100.[match(math6173ID, math6173cw2.df$Student.ID)]))))
length(which(is.na(math6173cw2.df$Total..out.of.100.[match(math6173ID, math6173cw2.df$Student.ID)])))
length(which(is.na(as.numeric(math6173cw2.df$Total..out.of.100.[match(math6173ID, math6173cw2.df$Student.ID)]))))
math6173cw2.df$Total..out.of.100.[match(math6173ID, math6173cw2.df$Student.ID)]
as.numeric(math6173cw1.df$Total..out.of.100.[match(math6173ID, math6173cw1.df$Student.ID)]) +
math6173cw2.df$Total..out.of.100.[match(math6173ID, math6173cw2.df$Student.ID)]
(as.numeric(math6173cw1.df$Total..out.of.100.[match(math6173ID, math6173cw1.df$Student.ID)]) +
math6173cw2.df$Total..out.of.100.[match(math6173ID, math6173cw2.df$Student.ID)])/2
379*51
379*52
379*12
650/800
50*80
52*80
53*80
53/7
y = sample(c(0,1), 100, replace = T)
x = rnorm(100)
summary(glm(y ~ x, family = "binomial"))
summary(glm(as.factor(y) ~ x, family = "binomial"))
summary(lm(y ~ x, family = "binomial"))
5.6/6.5
5.6/6
5.6/6.5*6
copperFile = "/Users/chwu/Documents/teaching/southampton/MATH6169/2022/lab/Hahn1.csv"
copper.df = read.csv(file = copperFile,  header = T, as.is = T)
head(copper.df)
plot(x = copper.df$temperature, y = copper.df$expansion,
pch = 16, col = "#00000077", las = 1,
xlab = "Temperature", ylab = "Thermal Expanasion")
copper.lm.fit = lm(expansion ~ temperature, data = copper.df)
summary(copper.lm.fit)
par(mfrow = c(2,2), mar = c(4,5,1.25,2) + 0.2)
plot(copper.lm.fit)
par(mfrow = c(2,2), mar = c(4,5,1.25,2) + 0.2)
with(data = copper.df,
plot(x = temperature, y = residuals(copper.lm.fit),
xlab = "Temperature", ylab = "Residuals"))
library(splines)
copper.ls.3k.bs = with(data = copper.df,
bs(temperature, df = 5, degree = 1,
knots = c(200, 400, 600), intercept = T))
copper.ls.3k.fit = lm(expansion ~ -1 + copper.ls.3k.bs,
data = copper.df)
summary(copper.ls.3k.fit)
copper.ls.3k.fit2 = lm(expansion ~ copper.ls.3k.bs,
data = copper.df)
summary(copper.ls.3k.fit2)
copper.ls.3k.fit.temp = lm(expansion ~ -1 +
bs(temperature, df = 5, degree = 1,
knots = c(200, 400, 600), intercept = T),
data = copper.df)
pred.df = data.frame(temperature = c(77.77, 288.88))
copper.ls.3k.fit.pred =  predict(copper.ls.3k.fit.temp, newdata = pred.df)
copper.ls.3k.fit.pred
copper.ls.3k.fit.temp <- lm(expansion ~ -1 +
bs(temperature, df = 5, intercept = T),
data = copper.df)
pred.df = data.frame(temperature = c(77.77, 88.88))
copper.ls.3k.fit.pred =  predict(copper.ls.3k.fit.temp, pred.df)
copper.ls.3k.fit.pred
copper.ls.8k.bs = bs(copper.df$temperature, df = 10, degree = 1,
knots = c(100, 200, 300, 400, 500, 600, 700, 800),
intercept = T)
copper.ls.8k.fit = lm(expansion ~ -1 + copper.ls.8k.bs,
data = copper.df)
summary(copper.ls.8k.fit)
AIC(copper.ls.3k.fit)
BIC(copper.ls.3k.fit)
AIC(copper.ls.8k.fit)
BIC(copper.ls.8k.fit)
copper.ls.3k.bs.v2 = bs(copper.df$temperature, df = 5, degree = 1,
knots = c(110, 250, 500), intercept = T)
copper.ls.3k.fit.v2 = lm(expansion ~ -1 + copper.ls.3k.bs.v2, data = copper.df)
summary(copper.ls.3k.fit.v2)
AIC(copper.ls.3k.fit.v2)
BIC(copper.ls.3k.fit.v2)
copper.cs.6k.bs = bs(copper.df$temperature, df = 10, degree = 3,
knots = c(120, 240, 360, 480, 600, 720), intercept = T)
copper.cs.6k.fit = lm(expansion  ~ -1 + copper.cs.6k.bs,
data = copper.df)
summary(copper.cs.6k.fit)
AIC(copper.cs.6k.fit)
BIC(copper.cs.6k.fit)
copperFile = "/Users/chwu/Documents/teaching/southampton/MATH6169/2022/lab/Hahn1.csv"
copper.df = read.csv(file = copperFile,  header = T, as.is = T)
head(copper.df)
plot(x = copper.df$temperature, y = copper.df$expansion,
pch = 16, col = "#00000077", las = 1,
xlab = "Temperature", ylab = "Thermal Expanasion")
copper.lm.fit = lm(expansion ~ temperature, data = copper.df)
summary(copper.lm.fit)
par(mfrow = c(2,2), mar = c(4,5,1.25,2) + 0.2)
plot(copper.lm.fit)
par(mfrow = c(2,2), mar = c(4,5,1.25,2) + 0.2)
with(data = copper.df,
plot(x = temperature, y = residuals(copper.lm.fit),
xlab = "Temperature", ylab = "Residuals"))
library(splines)
copper.ls.3k.bs = with(data = copper.df,
bs(temperature, df = 5, degree = 1,
knots = c(200, 400, 600), intercept = T))
copper.ls.3k.fit = lm(expansion ~ -1 + copper.ls.3k.bs,
data = copper.df)
summary(copper.ls.3k.fit)
copper.ls.3k.fit2 = lm(expansion ~ copper.ls.3k.bs,
data = copper.df)
summary(copper.ls.3k.fit2)
copper.ls.3k.fit.temp = lm(expansion ~ -1 +
bs(temperature, df = 5, degree = 1,
knots = c(200, 400, 600), intercept = T),
data = copper.df)
pred.df = data.frame(temperature = c(77.77, 288.88))
copper.ls.3k.fit.pred =  predict(copper.ls.3k.fit.temp, newdata = pred.df)
copper.ls.3k.fit.pred
copper.ls.3k.fit.temp <- lm(expansion ~ -1 +
bs(temperature, df = 5, intercept = T),
data = copper.df)
pred.df = data.frame(temperature = c(77.77, 88.88))
copper.ls.3k.fit.pred =  predict(copper.ls.3k.fit.temp, pred.df)
copper.ls.3k.fit.pred
copper.ls.8k.bs = bs(copper.df$temperature, df = 10, degree = 1,
knots = c(100, 200, 300, 400, 500, 600, 700, 800),
intercept = T)
copper.ls.8k.fit = lm(expansion ~ -1 + copper.ls.8k.bs,
data = copper.df)
summary(copper.ls.8k.fit)
AIC(copper.ls.3k.fit)
BIC(copper.ls.3k.fit)
AIC(copper.ls.8k.fit)
BIC(copper.ls.8k.fit)
copper.ls.3k.bs.v2 = bs(copper.df$temperature, df = 5, degree = 1,
knots = c(110, 250, 500), intercept = T)
copper.ls.3k.fit.v2 = lm(expansion ~ -1 + copper.ls.3k.bs.v2, data = copper.df)
summary(copper.ls.3k.fit.v2)
AIC(copper.ls.3k.fit.v2)
BIC(copper.ls.3k.fit.v2)
copper.cs.6k.bs = bs(copper.df$temperature, df = 10, degree = 3,
knots = c(120, 240, 360, 480, 600, 720), intercept = T)
copper.cs.6k.fit = lm(expansion  ~ -1 + copper.cs.6k.bs,
data = copper.df)
summary(copper.cs.6k.fit)
AIC(copper.cs.6k.fit)
BIC(copper.cs.6k.fit)
